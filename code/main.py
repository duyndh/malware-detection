import os
import csv
import pefile
import hashlib

def load_dataset(dataset_dir, csv_file_name, machines_filter, file_count_limit, file_size_limit):

    print("================")
    print(load_dataset.__name__)

    origin_files = []

    with open(os.path.join(dataset_dir, csv_file_name), newline='') as csv_file:
        reader = csv.DictReader(csv_file)
        for row in reader:
            origin_files.append(row)

    percentage = 0
    print(0, "%")

    filtered_files = []
    file_count_limit = min(len(origin_files), file_count_limit)

    for origin_file in origin_files:

        # Exceed limit of of file count
        if len(filtered_files) >= file_count_limit:
            break

        if (int)(len(filtered_files) * 100 / file_count_limit) > percentage:
            percentage = (int)(len(filtered_files) * 100 / file_count_limit)
            print(percentage, "%")

        # Build path
        file_path = os.path.join(dataset_dir, origin_file["name"])

        # Exceed limit of file size
        if os.stat(file_path).st_size > file_size_limit:
            continue

        # Not expected machine
        if int(row["machine"]) not in machines_filter:
            continue

        # Calculate checksum
        checksum = hashlib.md5(open(file_path, 'rb').read()).hexdigest()
        if origin_file["md5"] != checksum:
            continue

        # Add to result
        filtered_files.append({"path": file_path, "machine": origin_file["machine"]})

        pass

    print(100, "%")
    return filtered_files

if __name__ == '__main__':

    # Benign dataset
    #origin_benign_files = load_dataset(os.path.expanduser("~//workspace//datasets//dataset_benign"), "_benign.csv", [332], 200, 1024 * 1024)
    # Malware dataset
    #origin_malware_files = load_dataset(os.path.expanduser("~//workspace//datasets//Virus.Win"), "_malware.csv", [332], 200, 1024 * 1024)

    pass