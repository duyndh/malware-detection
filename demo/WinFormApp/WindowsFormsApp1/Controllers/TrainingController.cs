using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WindowsFormsApp1.UserControls;
using static WindowsFormsApp1.Home;
using static WindowsFormsApp1.UserControls.TrainingUserControl;

namespace WindowsFormsApp1.Controllers
{
    public class TrainingController
    {
        TrainingUserControl _userControl = null;

        private const string PYTHON_PATH = @"C:\Setup\venv\Scripts\python.exe";

        private string _output = string.Empty;
        public string GetOutput() { return _output; }

        public TrainingController(TrainingUserControl userControl) { _userControl = userControl; }

        public bool StartTraining(int featureIndex, int sequenceLength, float testRatio, int reducedSize,
            string[] benignDirs, int benignLimitCount, string[] malwareDirs, int malwareLimitCount, int[] classifierIndexs, string logFilePath, string modelFilePath)
        {
            bool result = false;

            _output = string.Empty;

            do
            {
                Environment.SetEnvironmentVariable("EDITH_feature_id", featureIndex.ToString());
                Environment.SetEnvironmentVariable("EDITH_sequence_len", sequenceLength.ToString());
                Environment.SetEnvironmentVariable("EDITH_test_ratio", testRatio.ToString());
                Environment.SetEnvironmentVariable("EDITH_reduced_size", reducedSize.ToString());
                Environment.SetEnvironmentVariable("EDITH_benign_dirs", string.Join(";", benignDirs));
                Environment.SetEnvironmentVariable("EDITH_benign_limit", benignLimitCount.ToString());
                Environment.SetEnvironmentVariable("EDITH_malware_dirs", string.Join(";", malwareDirs));
                Environment.SetEnvironmentVariable("EDITH_malware_limit", malwareLimitCount.ToString());
                Environment.SetEnvironmentVariable("EDITH_classifier_ids", string.Join(" ", classifierIndexs));
                Environment.SetEnvironmentVariable("EDITH_log_file_path", logFilePath.ToString());
                Environment.SetEnvironmentVariable("EDITH_model_file_path", modelFilePath.ToString());

                var pyAppDir = Path.Combine(Wrapper.GetRootDir(), "PyApp");
                var cmdPath = Environment.ExpandEnvironmentVariables(@"%WinDir%\System32\cmd.exe");
                var scriptsDir = Environment.ExpandEnvironmentVariables(@"%HOMEDRIVE%\Setup\venv\Scripts");
                var activatePath = Path.Combine(scriptsDir, "activate.bat");

                ProcessStartInfo startInfo = new ProcessStartInfo();
                startInfo.FileName = cmdPath;
                startInfo.WorkingDirectory = pyAppDir;

                startInfo.Arguments = string.Format("/k " + "\"" +
                    " \"\"{0}\"\"" +
                    " & cd /d \"\"{1}\"\"" +
                    " & main.py & exit(0) " +
                    "\"",
                    activatePath,
                    pyAppDir);

                startInfo.UseShellExecute = false;
                startInfo.RedirectStandardOutput = true;
                startInfo.CreateNoWindow = true;

                using (var process = Process.Start(startInfo))
                {
                    process.WaitForExit();

                    using (var reader = process.StandardOutput)
                    {
                        _output = reader.ReadToEnd();
                        _userControl.WriteToOutputRichTextBoxContent(_output);
                    }
                }

            } while (false);

            _userControl.SetStartProgressBar(100);
            MessageBox.Show("Done");
            _userControl.SetStartButtonState(true);

            return result;
        }
    }
}
