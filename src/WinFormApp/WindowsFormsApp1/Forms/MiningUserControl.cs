using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using WindowsFormsApp1.Controllers;
using System.Threading;
using System.Collections;

namespace WindowsFormsApp1.Controls
{
    public partial class MiningUserControl : UserControl
    {
        public MiningUserControl()
        {
            InitializeComponent();
        }

        public enum DataFormatEnum
        {
            Raw,
            Assembly,
            Standard,
            Graph
        }

        public static readonly string[] DATA_FORMAT_VALUES = new string[]
        {
            "Raw",
            "Assembly",
            "Standard",
            "Graph"
        };

        public static readonly string ASM_EXT = ".asm";
        public static readonly string BYTES_EXT = ".bytes";
        public static readonly string STANDARD_EXT = ".scsv";
        public static readonly string GRAPH_EXT = ".gcsv";

        public static readonly string[] PE_EXTS = { ".acm", ".ax", ".cpl", ".dll", ".drv", ".efi", ".exe", ".mui", ".ocx", ".scr", ".sys", ".tsp" };

        public static readonly HashSet<DataFormatEnum>[] DATA_FORMAT_DIRECTIONS = new HashSet<DataFormatEnum>[]
        {
            new HashSet<DataFormatEnum>() { DataFormatEnum.Standard, DataFormatEnum.Graph },
            new HashSet<DataFormatEnum>() { DataFormatEnum.Standard, DataFormatEnum.Graph },
            new HashSet<DataFormatEnum>() { DataFormatEnum.Graph },
            new HashSet<DataFormatEnum>() { }
        };

        protected override void OnLoad(EventArgs e)
        {
            for (int iFormat = 0; iFormat < DATA_FORMAT_VALUES.Length - 1; iFormat++)
                this.srcFormatComboBox.Items.Add(DATA_FORMAT_VALUES[iFormat]);
            this.srcFormatComboBox.SelectedIndex = 0;

            this.countLimitNumericUpDown.Maximum = Int32.MaxValue;
            this.countLimitNumericUpDown.Minimum = 0;

#if DEBUG
            this.srcLocationTextBox.Text = @"C:\Temp\in";
            this.dstLocationTextBox.Text = @"c:\temp\out";

            this.countLimitNumericUpDown.Value = Int32.MaxValue;
            this.srcFormatComboBox.SelectedIndex = 0;
            this.dstFormatComboBox.SelectedIndex = 1;
            this.onlyPeExtCheckBox.Checked = false;
#endif
        }

        public void SetStartButtonState(bool enable)
        {
            this.startButton.Invoke((MethodInvoker)delegate
            {
                this.startButton.Enabled = enable;
            });
        }

        public void SetStartProgressBar(int percentage)
        {
            this.startProgressBar.Invoke((MethodInvoker)delegate
            {
                this.startProgressBar.Value = (int)(percentage * this.startProgressBar.Maximum / 100);
            });
        }

        private void startButton_Click(object sender, EventArgs e)
        {
            try
            {
                SetStartButtonState(false);
                SetStartProgressBar(0);

                if (!Directory.Exists(this.srcLocationTextBox.Text))
                    throw new Exception("Not found: Source location");

                if (!Directory.Exists(this.dstLocationTextBox.Text))
                    throw new Exception("Not found: Destination location");

                if (!DATA_FORMAT_VALUES.Contains(this.srcFormatComboBox.SelectedItem)
                    || !DATA_FORMAT_VALUES.Contains(this.dstFormatComboBox.SelectedItem))
                    throw new Exception("Invalid: Data format");

                if (this.srcFormatComboBox.SelectedIndex >= Array.IndexOf(DATA_FORMAT_VALUES, this.dstFormatComboBox.SelectedItem))
                    throw new Exception("Invalid: Data format");

                // Start
                {
                    var srcLocation = this.srcLocationTextBox.Text;
                    var srcFormat = (DataFormatEnum)Array.IndexOf(DATA_FORMAT_VALUES, this.srcFormatComboBox.SelectedItem);
                    var dstLocation = this.dstLocationTextBox.Text;
                    var dstFormat = (DataFormatEnum)Array.IndexOf(DATA_FORMAT_VALUES, this.dstFormatComboBox.SelectedItem);
                    var limitCount = (int)this.countLimitNumericUpDown.Value;
                    var onlyPeExts = this.onlyPeExtCheckBox.Checked;

                    var thread = new Thread(() => Home.GetInstance().GetMiningController().StartMining(srcLocation, srcFormat, dstLocation, dstFormat, limitCount, onlyPeExts), Wrapper.MAX_STACK_SIZE);
                    thread.Start();
                }

            } catch (Exception ex)
            {
                SetStartProgressBar(100);

                MessageBox.Show(ex.Message);
                SetStartButtonState(true);
            }
        }

        private void selectSrcLocationButton_Click(object sender, EventArgs e)
        {
            using (var dialog = new FolderBrowserDialog())
            {
                DialogResult result = dialog.ShowDialog();

                if (result == DialogResult.OK && !string.IsNullOrWhiteSpace(dialog.SelectedPath))
                    this.srcLocationTextBox.Text = dialog.SelectedPath;
            }
        }

        private void selectDstLocationButton_Click(object sender, EventArgs e)
        {
            using (var dialog = new FolderBrowserDialog())
            {
                DialogResult result = dialog.ShowDialog();

                if (result == DialogResult.OK && !string.IsNullOrWhiteSpace(dialog.SelectedPath))
                    this.dstLocationTextBox.Text = dialog.SelectedPath;
            }
        }

        private void srcFormat_SelectedValueChanged(object sender, EventArgs e)
        {
            this.dstFormatComboBox.Items.Clear();
            var srcFormatIndex = Array.IndexOf(DATA_FORMAT_VALUES, this.srcFormatComboBox.SelectedItem);
            foreach (var dstFormatIndex in DATA_FORMAT_DIRECTIONS[srcFormatIndex])
                this.dstFormatComboBox.Items.Add(DATA_FORMAT_VALUES[(int)dstFormatIndex]);
            this.dstFormatComboBox.SelectedIndex = 0;
        }
    }
}
