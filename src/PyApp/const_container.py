import enum
import os

OPCODE_RANGE = (256 + 1 + 14)


class FeatureEnum(enum.Enum):
    TF = 0
    TF_IDF = 1
    PR = 2

    @classmethod
    def get_index(cls, type):
        return list(cls).index(type)

    @classmethod
    def get_name(cls, index):
        names = [
            "TF",
            "TF-IDF",
            "PR"
        ]
        return names[index]


class ClassifierEnum(enum.Enum):
    KNN = 0,
    SVM = 1,
    Logistic_Regression = 2,
    Neuron_Network = 3,
    Naive_Bayes = 4,
    QDA = 5,
    LDA = 6,
    Decision_Tree = 7,
    Random_Forest = 8,
    Extra_Trees = 9,
    Ada_Boost = 10,
    Gradient_Boosting = 11

    @classmethod
    def get_index(cls, type):
        return list(cls).index(type)

    @classmethod
    def get_name(cls, index):
        names = [
            "KNN",
            "SVM",
            "LogisticRegression",
            "NeuralNetwork",
            "NaiveBayes",
            "QDA",
            "LDA",
            "DecisionTree",
            "RandomForest",
            "ExtraTrees",
            "AdaBoost",
            "GradientBoosting"
        ]
        return names[index]


root_dir = "c:\\" #"/content/drive/MyDrive/Colab Notebooks/DemoDatasets/"


class GlobalVars:
    limit_size = 1024 * 1024  # 1MB
    limit_len = 1024 * 100
    k_fold = 5
    prefix_file_name = None

    feature_id = FeatureEnum.get_index(FeatureEnum.TF_IDF)
    sequence_len = 1
    test_ratio = 0.2
    reduced_size = 64
    benign_dirs = [root_dir + x for x in ["X/E", "X/F", "X/A", "X/B", "X/C", "X/D"]]
    benign_limit = 1e2
    malware_dirs = [root_dir + x for x in ["Y/Y", "Y/YX"]]
    malware_limit = 3e2
    classifier_ids = [1, 2]  #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
    output_dir = "c:\\temp\\output"

    benign_test_dirs = None
    benign_test_limit = 0
    malware_test_dirs = None
    malware_test_limit = 0
